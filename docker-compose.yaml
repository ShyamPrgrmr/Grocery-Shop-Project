services:
  mongo:
    build:
      context: ./Backend/Mongo
      dockerfile: Dockerfile
    restart: always
    ports:
      - "27017:27017"
  nodeserver:
    build:
      context: ./Backend/NodeServer
      dockerfile: Dockerfile
    depends_on:
      - mongo
    restart: always
    ports:
      - "9000:9000"
    environment:
      - MONGO_URL=mongodb://root:root@mongo:27017/shop
      - AWS_SES_SENDER_EMAIL=shyam.march@outlook.com
      - AWS_S3_ACCESSKEY_ID=AKIAYBMGHEIDCUQSBENW
      - AWS_S3_SECRET_ACCESS_KEY=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
      - AWS_S3_BUCKET_NAME=grocery-shop-bucket
      - AWS_SES_REGION=us-east-1
      - AWS_SES_ACCESS_KEY_ID=AKIAYBMGHEIDG3Y53M4Y
      - AWS_SES_SECRET_ACCESS_KEY=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
  pythonserver:
    restart: always
    build:
      context: ./Backend/PythonServer
      dockerfile: Dockerfile
    ports:
      - "3000:8000"
  customersite:
    restart: always
    build:
      context: ./Frontend/ClientPortal
      dockerfile: Dockerfile
    ports:
      - "8080:3000"
    depends_on:
      - nodeserver
      - pythonserver
    environment:
      - NODE_SERVER_ENDPOINT=http://nodeserver:9000
      - PYTHON_SERVER_ENDPOINT=http://pythonserver:3000
  adminsite:
    restart: always
    build:
      context: ./Frontend/AdminPortal
      dockerfile: Dockerfile
    environment:
      - NODE_SERVER_ENDPOINT=http://nodeserver:9000
      - PYTHON_SERVER_ENDPOINT=http://pythonserver:3000
    ports:
      - "80:3000"
    depends_on:
      - nodeserver
